let row;let col;let board;let boardtf;let minesCount;let font,
fontsize = 40;
let size = 40;

function setup() {
  noLoop();
  createCanvas(600, 600);
  row = height/size;
  col = width/size;
  let xlocation = Math.floor(mouseX/40); /// this how far left/right
  let ylocation = Math.floor(mouseY/40); /// this is how far up and down
  board = [[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]]///bombs, -1 is bomb, 0 is nothing 
  
  boardtf = [[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]] /// 0 equals false 1 equals true row, columb 
  console.log(board)
  mine()
  /// checking mines
  
   for (let r = 0; r < row; r++) {
    for (let c = 0; c < col; c++) {
      if (board[r][c] !== -1) {
        board[r][c] = countAdjacentMines(r, c);
      }
    }
  }
  
  // Check out the board 
  for (let r=0; r<row; r++) {
    let thisrow = ""
    for (let c = 0; c< col; c++) {
      if (board[r][c] < 0) {
        thisrow += board[r][c] + ' '; 
      } else {
        thisrow += ' ' + board[r][c] + ' '; 
      }
      
    }
    console.log(thisrow); 
  }
function countAdjacentMines(r, c) {
  let count = 0;
  for (let i = -1; i <= 1; i++) {
    for (let j = -1; j <= 1; j++) {
      let x = c + j;
      let y = r + i;
      if (x >= 0 && x < col && y >= 0 && y < row && board[y][x] === -1) {
        count++;
      }
    }
  }
  return count; 
}

}


/// board sets up where the mines are and boardtf setups what has been clicked minecount should be created in the setup function.
/// when clicked x,y make that cell from a 0 to a 1 on boardtf to show that it has been clicked, 

function draw(){
  background(0);
    for (let r=0;r<row;r++){
      for (var c=0;c<col;c++){
       rect(c*size, r*size, size,size)
                
      }
    }
}

function reveal0(){
  ///need to make it reveal ajacent 0s 
}



function mousePressed() {
  xlocation = Math.floor(mouseX/40) /// this how far left/right
  ylocation = Math.floor(mouseY/40) /// this is how far up and down
  fill(125); 
  rect((xlocation)*40 ,  (ylocation)*40,40,40);
  textSize(30)
  fill('black');
  if (board[ylocation][xlocation] == -1) {
      console.log("You hit a mine, Game over.");
  } 
  if (board[ylocation][xlocation] == -1) {
      text('ðŸ’£',xlocation*40+5,ylocation*40+30);
  }
  if (board[ylocation][xlocation] == 0) {
      text('0',xlocation*40+13,ylocation*40+30);
    
  }
  if (board[ylocation][xlocation] == 1) {
      text('1',xlocation*40+13,ylocation*40+30);
  }
  if (board[ylocation][xlocation] == 2) {
      text('2',xlocation*40+13,ylocation*40+30);
  }
  if (board[ylocation][xlocation] == 3) {
      text('3',xlocation*40+13,ylocation*40+30);
  }
  if (board[ylocation][xlocation] == 4) {
      text('4',xlocation*40+13,ylocation*40+30);
  }
  if (board[ylocation][xlocation] == 5) {
      text('5',xlocation*40+13,ylocation*40+30);
  }
  if (board[ylocation][xlocation] == 6) {
      text('6',xlocation*40+13,ylocation*40+30);
  }
  if (board[ylocation][xlocation] == 7) {
      text('7',xlocation*40+13,ylocation*40+30);
  }
  if (board[ylocation][xlocation] == 8) {
      text('8',xlocation*40+13,ylocation*40+30);
  }
  
  
  
    ///bomb emjie 
 }

function mine(){ /// mine generator  
  for (let x = 0; x < 50; x += 1) {
  board[Math.floor(random(0,16))][Math.floor(random(0,16))]=-1
  }
}


function drawboard(){
  xlocation = Math.floor(mouseX/40)
  ylocation = Math.floor(mouseY/40)
  boardtf[xlocation][ylocation] = 1 
 }
