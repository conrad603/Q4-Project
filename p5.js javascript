let row;let col;let board;let boardtf;let minesCount
let size = 40

function setup() {
  noLoop();
  createCanvas(600, 600);
  row = height/size;
  col = width/size;
  let xlocation = Math.floor(mouseX/40); /// this how far left/right
  let ylocation = Math.floor(mouseY/40); /// this is how far up and down
  board = [[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]]///bombs, -1 is bomb, 0 is nothing 
  
  boardtf = [[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]] /// 0 equals false 1 equals true row, columb 
  console.log(board)
  mine()
  /// checking mines
  
   for (let r = 0; r < row; r++) {
    for (let c = 0; c < col; c++) {
      if (board[r][c] !== -1) {
        board[r][c] = countAdjacentMines(r, c);
      }
    }
  }
  
  // Check out the board 
  for (let r=0; r<row; r++) {
    let thisrow = ""
    for (let c = 0; c< col; c++) {
      if (board[r][c] < 0) {
        thisrow += board[r][c] + ' '; 
      } else {
        thisrow += ' ' + board[r][c] + ' '; 
      }
      
    }
    console.log(thisrow); 
  }
}

function countAdjacentMines(r, c) {
  let count = 0;
  for (let i = -1; i <= 1; i++) {
    for (let j = -1; j <= 1; j++) {
      let x = c + j;
      let y = r + i;
      if (x >= 0 && x < col && y >= 0 && y < row && board[x][y] === -1) {
        count++;
      }
    }
  }
  return count; 
 /// x and y are inverted need to debug
}
/// board sets up where the mines are and boardtf setups what has been clicked minecount should be created in the setup function.
/// when clicked x,y make that cell from a 0 to a 1 on boardtf to show that it has been clicked, 

function draw(){
  background(0);
    for (let r=0;r<row;r++){
      for (var c=0;c<col;c++){
       rect(c*size, r*size, size,size)
                
      }
    }
}


function mousePressed() {
  drawboard()
  xlocation = Math.floor(mouseX/40) /// this how far left/right
  ylocation = Math.floor(mouseY/40) /// this is how far up and down
  fill(100); 
  rect((xlocation)*40 ,  (ylocation)*40,40,40);
  if (board[xlocation][ylocation] == -1) {
      console.log("You hit a mine, Game over.");
  } else {
    
    
    
  }

}

function mine(){ /// mine generator  
  for (let x = 0; x < 50; x += 1) {
  board[Math.floor(random(0,16))][Math.floor(random(0,16))]=-1
  }
}


function drawboard(){
  xlocation = Math.floor(mouseX/40)
  ylocation = Math.floor(mouseY/40)
  boardtf[xlocation][ylocation] = 1 
 }
